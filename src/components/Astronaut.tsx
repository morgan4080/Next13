import {useEffect, useMemo, useRef} from 'react'
import rand from "@/Utils/rand"
import {gsap, Linear} from "gsap"
import { RoughEase } from "gsap/dist/EasePack"
gsap.registerPlugin(RoughEase)
export function Astronaut() {
    const starRef = useRef(null);
    const svgRef = useRef(null);
    let appearMin = 0.5;
    let appearMax = 0.8;

    let delayMin = 2;
    let delayMax = 6;

    let durationMin = 0.3;
    let durationMax = 1;

    let numAnimations = 50;



    const eases = useMemo(() => {
        let es = []
        for (let i = 0; i < numAnimations; i++) {

            // @ts-ignore
            let ease = new RoughEase({
                template:  Linear.easeNone,
                strength: rand(1, 3),
                points: rand(50, 200)|0,
                taper: "both",
                randomize: true,
                clamp: true
            });

            es.push(ease);
        }
        return es
    }, [numAnimations]);


    useEffect(() => {
        const ctx = gsap.context(() => {
            if (starRef.current && svgRef.current) {
                const starHolder: HTMLElement & SVGElement = starRef.current
                const stars = starHolder.childNodes
                stars.forEach((star, i) => {
                    if (i === 2) {
                        gsap.set(star, {
                            rotation: rand(360),
                            xPercent: -50,
                            yPercent: -50,
                            scale: 0,
                            x: 50
                        })
                    } else {
                        gsap.set(star, {
                            rotation: rand(360),
                            xPercent: -50,
                            yPercent: -50,
                            scale: 0,
                        })
                    }
                    const tl = gsap.timeline({repeat: -1, yoyo: true})

                    for (let i = 0; i < numAnimations; i++) {
                        let ease1 = eases[rand(numAnimations) | 0];
                        let ease2 = eases[rand(numAnimations) | 0];

                        let alpha = rand(0.7, 1);
                        let scale = rand(0.7, 0.8)

                        let appear = "+=" + rand(appearMin, appearMax);
                        let delay = "+=" + rand(delayMin, delayMax);
                        let duration1 = rand(durationMin, durationMax);
                        let duration2 = rand(durationMin, durationMax);

                        tl.to(star, duration1, {autoAlpha: alpha, scale: scale, ease: ease1}, delay)
                            .to(star, duration2, {autoAlpha: 0, scale: 0, ease: ease2}, appear)
                    }

                    tl.progress(rand(1));
                })
            }
        })
        return () => {
            ctx.revert();
        }
    }, [appearMax, appearMin, delayMax, delayMin, durationMax, durationMin, eases, numAnimations])

    return (
        <svg ref={svgRef} className="w-full lg:absolute lg:top-1/3 lg:left-1/2 lg:w-2/3" viewBox="0 0 1277 739" fill="none" xmlns="http://www.w3.org/2000/svg">
            <g ref={starRef}>
                <path d="M475.803 156.09C475.94 154.747 476.078 153.405 476.217 152.032C478.152 151.599 479.725 151.319 480.76 153.323C481.492 154.735 482.844 154.935 484.29 154.653C484.762 154.561 485.224 154.339 485.693 154.331C486.796 154.313 487.706 154.731 488.313 155.717C488.88 156.636 488.469 157.45 488.014 158.196C487.603 158.869 487.025 159.439 486.417 160.184C486.935 160.861 487.462 161.448 487.873 162.109C488.377 162.921 488.96 163.779 488.313 164.786C487.662 165.805 486.799 166.491 485.496 166.21C484.38 165.969 483.276 165.669 481.939 165.34C481.378 165.934 480.629 166.664 479.956 167.455C479.195 168.346 478.259 168.287 477.298 168.023C476.292 167.746 475.952 166.954 475.942 165.984C475.932 165.098 475.94 164.213 475.94 163.354C474.792 162.854 473.769 162.302 472.68 161.96C471.338 161.54 470.725 160.624 470.681 159.341C470.647 158.359 471.719 157.424 473.005 157.095C473.703 156.916 474.403 156.749 475.397 156.517C475.845 156.372 475.884 156.249 475.803 156.09Z" fill="#ffab00"/>
                <path d="M308.486 434.488C308.121 433.311 307.909 432.248 307.644 430.92C309.434 430.359 310.992 429.87 312.66 429.347C312.66 428.095 312.66 426.896 312.66 425.787C315.154 424.175 315.937 424.25 317.577 426.385C318.611 427.73 319.702 428.527 321.438 427.62C321.769 427.448 322.233 427.54 322.634 427.494C323.706 427.365 324.623 427.713 325.053 428.695C325.486 429.685 325.466 430.74 324.659 431.63C324.183 432.156 323.721 432.698 323.249 433.235C323.857 434.12 324.433 434.882 324.924 435.694C325.468 436.589 325.49 437.513 324.805 438.374C324.044 439.322 322.872 439.662 321.715 439.293C321.273 439.152 320.828 439.025 320.385 438.887C319.16 438.5 318.086 438.434 317.281 439.767C316.979 440.263 316.323 440.647 315.747 440.854C313.921 441.506 312.798 440.703 312.713 438.76C312.679 438.04 312.708 437.316 312.708 436.55C311.303 435.879 309.971 435.241 308.486 434.488Z" className="fill-cyan-900 dark:fill-slate-300"/>
                <path d="M667.064 475.178C666.989 475.148 666.916 475.112 666.841 475.088C663.389 474.037 662.951 474.404 663.41 470.268C664.636 469.867 665.973 469.429 667.4 468.96C667.942 467.26 667.232 464.712 669.85 464.186C672.184 463.717 672.852 465.925 674.389 467.44C674.907 467.362 675.76 467.253 676.606 467.102C677.972 466.859 679.365 466.499 680.347 467.919C681.079 468.977 680.738 470.258 679.382 471.778C679.166 472.019 678.954 472.26 678.67 472.581C679.406 474.348 682.146 475.776 679.538 478.346C678.419 478.55 677.6 478.572 676.781 478.592C676.248 478.46 675.716 478.336 675.186 478.198C674.267 477.952 673.463 477.991 672.874 478.901C672.621 479.292 672.293 479.698 671.902 479.927C670.288 480.87 668.236 480.741 668.114 478.227C668.088 477.663 668.08 477.101 668.058 476.17C667.721 475.596 667.392 475.387 667.064 475.178Z" className="fill-cyan-900 dark:fill-slate-300"/>
                <path d="M111.123 315.368C111.26 314.025 111.398 312.683 111.537 311.31C113.472 310.877 115.045 310.597 116.08 312.601C116.812 314.013 118.164 314.213 119.61 313.931C120.082 313.839 120.544 313.617 121.013 313.609C122.116 313.591 123.026 314.009 123.633 314.995C124.2 315.914 123.789 316.728 123.334 317.474C122.923 318.147 122.345 318.717 121.737 319.462C122.255 320.139 122.782 320.726 123.193 321.387C123.697 322.199 124.28 323.057 123.633 324.064C122.982 325.083 122.119 325.769 120.816 325.488C119.7 325.247 118.596 324.947 117.259 324.618C116.698 325.212 115.949 325.942 115.276 326.733C114.515 327.624 113.579 327.565 112.618 327.301C111.612 327.024 111.272 326.232 111.262 325.262C111.252 324.376 111.26 323.491 111.26 322.632C110.112 322.132 109.089 321.58 108 321.238C106.658 320.818 106.045 319.902 106.001 318.619C105.967 317.637 107.039 316.702 108.325 316.373C109.023 316.194 109.723 316.027 110.717 315.795C111.165 315.65 111.204 315.527 111.123 315.368Z" fill="#0ea5e9"/>
                <path d="M262.123 249.368C262.26 248.025 262.398 246.683 262.537 245.31C264.472 244.877 266.045 244.597 267.08 246.601C267.812 248.013 269.164 248.213 270.61 247.931C271.082 247.839 271.544 247.617 272.013 247.609C273.116 247.591 274.026 248.009 274.633 248.995C275.2 249.914 274.789 250.728 274.334 251.474C273.923 252.147 273.345 252.717 272.737 253.462C273.255 254.139 273.782 254.726 274.193 255.387C274.697 256.199 275.28 257.057 274.633 258.064C273.982 259.083 273.119 259.769 271.816 259.488C270.7 259.247 269.596 258.947 268.259 258.618C267.698 259.212 266.949 259.942 266.276 260.733C265.515 261.624 264.579 261.565 263.618 261.301C262.612 261.024 262.272 260.232 262.262 259.262C262.252 258.376 262.26 257.491 262.26 256.632C261.112 256.132 260.089 255.58 259 255.238C257.658 254.818 257.045 253.902 257.001 252.619C256.967 251.637 258.039 250.702 259.325 250.373C260.023 250.194 260.723 250.027 261.717 249.795C262.165 249.65 262.204 249.527 262.123 249.368Z" className="fill-cyan-900 dark:fill-slate-300"/>
                <path d="M651.123 169.368C651.26 168.025 651.398 166.683 651.537 165.31C653.472 164.877 655.045 164.597 656.08 166.601C656.812 168.013 658.164 168.213 659.61 167.931C660.082 167.839 660.544 167.617 661.013 167.609C662.116 167.591 663.026 168.009 663.633 168.995C664.2 169.914 663.789 170.728 663.334 171.474C662.923 172.147 662.345 172.717 661.737 173.462C662.255 174.139 662.782 174.726 663.193 175.387C663.697 176.199 664.28 177.057 663.633 178.064C662.982 179.083 662.119 179.769 660.816 179.488C659.7 179.247 658.596 178.947 657.259 178.618C656.698 179.212 655.949 179.942 655.276 180.733C654.515 181.624 653.579 181.565 652.618 181.301C651.612 181.024 651.272 180.232 651.262 179.262C651.252 178.376 651.26 177.491 651.26 176.632C650.112 176.132 649.089 175.58 648 175.238C646.658 174.818 646.045 173.902 646.001 172.619C645.967 171.637 647.039 170.702 648.325 170.373C649.023 170.194 649.723 170.027 650.717 169.795C651.165 169.65 651.204 169.527 651.123 169.368Z" className="fill-cyan-900 dark:fill-slate-300"/>
                <path d="M868.805 429.056C868.73 429.026 868.657 428.99 868.582 428.966C865.13 427.915 864.692 428.282 865.151 424.146C866.377 423.745 867.714 423.307 869.141 422.838C869.683 421.138 868.973 418.59 871.591 418.064C873.925 417.595 874.593 419.803 876.13 421.318C876.648 421.24 877.501 421.131 878.347 420.98C879.713 420.737 881.106 420.377 882.088 421.797C882.82 422.855 882.479 424.136 881.123 425.656C880.907 425.897 880.695 426.138 880.411 426.459C881.147 428.226 883.887 429.654 881.279 432.224C880.16 432.428 879.341 432.45 878.522 432.47C877.989 432.338 877.457 432.214 876.927 432.076C876.008 431.83 875.204 431.869 874.615 432.779C874.362 433.17 874.034 433.576 873.643 433.805C872.029 434.748 869.977 434.619 869.855 432.105C869.829 431.541 869.821 430.979 869.799 430.048C869.462 429.474 869.133 429.265 868.805 429.056Z" fill="#e8303c"/>
            </g>
        </svg>
    )
}
